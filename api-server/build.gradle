plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kusitms.duduk'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':domain')
    implementation project(':application')
    implementation project(':core')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'org.json:json:20210307'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.2')
            { exclude group: 'org.json', module: 'json'}
    implementation 'com.auth0:java-jwt:4.4.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation platform('org.junit:junit-bom:5.9.1')

    // domain 모듈에 정의된 테스트 픽스처를 현재 모듈의 테스트 환경에서 사용할 수 있도록 하는 데 필요한 구성입니다
    testImplementation(testFixtures(project(":domain")))
}

test {
    useJUnitPlatform()
}

String jarName = "api-server.jar"

tasks.named("bootJar") {
    bootJar.getArchiveFileName().set(jarName)

    bootJar.doLast(task -> {
        copy(copySpec -> {
            copySpec.from("build/libs/" + jarName)
            copySpec.into("../build/libs")
        })
    })
}