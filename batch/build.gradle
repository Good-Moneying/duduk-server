plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kusitms.duduk'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation project(':application')
    implementation project(':domain')
    implementation project(':core')
    implementation project(':common')

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring boot
    implementation 'org.springframework.boot:spring-boot-starter'

    // Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring boot starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation(testFixtures(project(":domain")))

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // H2 Database
    runtimeOnly 'com.h2database:h2'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
}

String jarName = "batch.jar";

tasks.named("bootJar") {
    bootJar.getArchiveFileName().set(jarName);

    bootJar.doLast(task -> {
        copy(copySpec -> {
            copySpec.from("build/libs/" + jarName);
            copySpec.into("../build/libs");
        });
    });
};